generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             String          @id @default(uuid())
  name           String
  username       String          @unique
  email          String          @unique
  password       String
  profile_id     String
  created_at     DateTime        @default(now())
  invalid_tokens InvalidTokens[]
  reset_token    ResetTokens?
  profile        Profiles        @relation(fields: [profile_id], references: [id])

  @@map("users")
}

model Profiles {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  image       String
  created_at  DateTime @default(now())
  levels      Levels?
  users       Users[]

  @@map("profiles")
}

model InvalidTokens {
  id             Int      @id @default(autoincrement())
  user_id        String
  token          String   @unique
  invalidated_at DateTime @default(now())
  user           Users    @relation(fields: [user_id], references: [id])

  @@map("invalid_tokens")
}

model ResetTokens {
  id         Int      @id @default(autoincrement())
  user_id    String   @unique
  token      String
  expires_at DateTime
  user       Users    @relation(fields: [user_id], references: [id])

  @@map("reset_tokens")
}

model Levels {
  id             String        @id @default(uuid())
  profile_id     String        @unique
  name           String        @unique
  description    String
  image          String
  required_score Int
  position       Int?          @unique
  created_at     DateTime      @default(now())
  unlocked       Boolean
  level_rewards  LevelRewards?
  profile        Profiles      @relation(fields: [profile_id], references: [id])

  @@map("levels")
}

model LevelRewards {
  id          String   @id @default(uuid())
  level_id    String   @unique
  name        String
  description String
  image       String
  unlocked_at DateTime
  level       Levels   @relation(fields: [level_id], references: [id])

  @@map("level_rewards")
}

model CollectionPoints {
  id          String @id @default(uuid())
  mac_address String @unique
  image       String
  name        String
  email       String
  whatsapp    String
  latitude    Float
  longitude   Float
  city        String
  uf          String @db.Char(2)

  @@map("collection_points")
}
